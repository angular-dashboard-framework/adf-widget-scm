{"version":3,"sources":["scm.js","adf-widget-scm.min.js","adf-widget-scm.tpl.js","edit/simpleEditController.js","commits/commits.js","charts/commitsLastCommits.js","charts/commitsByMonth.js","charts/commitsByAuthor.js","service.js","adf-widget-scm.js"],"names":["window","undefined","angular","module","config","dashboardProvider","category","edit","templateUrl","controller","controllerAs","resolve","repositories","SCM","getRepositories","resolveRepository","result","repository","getRepository","$inject","widget","title","description","reload","commitsByAuthor","getCommitsByAuthor","commitsByMonth","getCommitsByMonth","commits","getCommits","run","$templateCache","put","vm","this","gravatarHash","commit","hash","properties","i","length","key","value","data","forEach","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","entry","count","UTC","seriesData","push","sort","a","b","chartConfig","chart","type","text","name","xAxis","dateTimeLabelFormats","month","yAxis","min","series","parseDate","input","parts","split","parseInt","author","y","sliced","selected","plotBackgroundColor","plotBorderWidth","plotShadow","plotOptions","pie","allowPointSelect","cursor","dataLabels","enabled","color","connectorColor","format","factory","scmEndpoint","$http","response","request","url","get","then","id","limit","changesets"],"mappings":"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","file":"adf-widget-scm.min.js","sourcesContent":["/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm', ['adf.provider', 'highcharts-ng'])\n  .config(function(dashboardProvider){\n\n    // category for widget add dialog\n    var category = 'SCM-Manager';\n\n    var edit = {\n      templateUrl: '{widgetsPath}/scm/src/edit/edit.html',\n      controller: 'ScmEditController',\n      controllerAs: 'vm',\n      resolve: {\n        /** @ngInject **/\n        repositories: function(SCM){\n          return SCM.getRepositories();\n        }\n      }\n    };\n\n    var resolveRepository = function(SCM, config){\n      var result = null;\n      if (config.repository){\n        result = SCM.getRepository(config.repository);\n      }\n      return result;\n    };\n\n    dashboardProvider\n      .widget('scm-commits-by-author', {\n        title: 'SCM Commits By Author',\n        description: 'SCM-Manager pie chart for commit count by author',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'CommitsByAuthorController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByAuthor: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommitsByAuthor(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-by-month', {\n        title: 'SCM Commits By Month',\n        description: 'SCM-Manager line chart for commit count by month',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'CommitsByMonthController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByMonth: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommitsByMonth(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-last-commits', {\n        title: 'SCM Commits line chart',\n        description: 'SCM-Manager line char for the last 50 commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'LastCommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommits(config.repository, 50);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits', {\n        title: 'SCM Commits',\n        description: 'SCM-Manager commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/commits/view.html',\n        controller: 'CommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommits(config.repository, 10);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      });\n  });\n","(function(window, undefined) {'use strict';\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm', ['adf.provider', 'highcharts-ng'])\n  .config([\"dashboardProvider\", function(dashboardProvider){\n\n    // category for widget add dialog\n    var category = 'SCM-Manager';\n\n    var edit = {\n      templateUrl: '{widgetsPath}/scm/src/edit/edit.html',\n      controller: 'ScmEditController',\n      controllerAs: 'vm',\n      resolve: {\n        /** @ngInject **/\n        repositories: [\"SCM\", function(SCM){\n          return SCM.getRepositories();\n        }]\n      }\n    };\n\n    var resolveRepository = function(SCM, config){\n      var result = null;\n      if (config.repository){\n        result = SCM.getRepository(config.repository);\n      }\n      return result;\n    };\n    resolveRepository.$inject = [\"SCM\", \"config\"];\n\n    dashboardProvider\n      .widget('scm-commits-by-author', {\n        title: 'SCM Commits By Author',\n        description: 'SCM-Manager pie chart for commit count by author',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'CommitsByAuthorController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByAuthor: [\"SCM\", \"config\", function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommitsByAuthor(config.repository);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      })\n      .widget('scm-commits-by-month', {\n        title: 'SCM Commits By Month',\n        description: 'SCM-Manager line chart for commit count by month',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'CommitsByMonthController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByMonth: [\"SCM\", \"config\", function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommitsByMonth(config.repository);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      })\n      .widget('scm-commits-last-commits', {\n        title: 'SCM Commits line chart',\n        description: 'SCM-Manager line char for the last 50 commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'LastCommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: [\"SCM\", \"config\", function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommits(config.repository, 50);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      })\n      .widget('scm-commits', {\n        title: 'SCM Commits',\n        description: 'SCM-Manager commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/commits/view.html',\n        controller: 'CommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: [\"SCM\", \"config\", function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommits(config.repository, 10);\n            }\n            return result;\n          }]\n        },\n        edit: edit\n      });\n  }]);\n\nangular.module(\"adf.widget.scm\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"{widgetsPath}/scm/src/charts/chart.html\",\"<div><div ng-if=!config.repository class=\\\"alert alert-info\\\">Please configure a repository</div><div ng-if=config.repository><highchart config=vm.chartConfig></highchart></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/commits/view.html\",\"<div><div ng-if=!config.repository class=\\\"alert alert-info\\\">Please configure a repository</div><div ng-if=config.repository><ul class=media-list><li class=media ng-repeat=\\\"commit in vm.commits\\\"><div ng-if=vm.gravatarHash(commit) class=media-left><img class=\\\"media-object img-thumbnail\\\" ng-src=\\\"http://www.gravatar.com/avatar/{{vm.gravatarHash(commit)}}?s=64&d=identicon\\\"></div><div class=media-body><p>{{commit.description}}</p><small>{{commit.author.name}}, {{commit.date | date: \\'yyyy-MM-dd HH:mm\\'}}</small></div></li></ul></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/edit/edit.html\",\"<form role=form><div class=form-group><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository><option ng-repeat=\\\"repository in vm.repositories | orderBy: \\'name\\'\\\" value={{repository.id}}>{{repository.name}}</option></select></div></form>\");}]);\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('ScmEditController', [\"repositories\", function(repositories){\n    var vm = this;\n\n    vm.repositories = repositories;\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsController', [\"config\", \"repository\", \"commits\", function(config, repository, commits){\n    var vm = this;\n\n    vm.repository = repository;\n    vm.commits = commits;\n\n    vm.gravatarHash = function(commit){\n      var hash;\n      if (commit.properties){\n        for (var i=0; i<commit.properties.length; i++){\n          if (commit.properties[0].key === 'gravatar-hash'){\n            hash = commit.properties[0].value;\n            break;\n          }\n        }\n      }\n      return hash;\n    };\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('LastCommitsController', [\"config\", \"repository\", \"commits\", function(config, repository, commits){\n    var vm = this;\n\n    if (repository && commits) {\n\n      var data = {};\n      angular.forEach(commits, function(commit){\n        var date = new Date(commit.date);\n        var key = date.getUTCFullYear() + '-' + (date.getUTCMonth() + 1) + '-' + date.getUTCDate();\n        var entry = data[key];\n        if (entry){\n          entry.count += 1;\n        } else {\n          data[key] = {\n            count: 1,\n            date: Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate())\n          };\n        }\n      });\n\n      var seriesData = [];\n      angular.forEach(data, function(entry){\n        seriesData.push([entry.date, entry.count]);\n      });\n\n      if (seriesData.length > 0){\n        seriesData.sort(function(a, b){\n          return a[0] - b[0];\n        });\n      }\n\n      vm.chartConfig = {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: repository.name + ' last commits'\n        },\n        xAxis: {\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            month: '%Y-%m'\n          },\n          title: {\n            text: 'Month'\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Commits'\n          },\n          min: 0\n        },\n        series: [{\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByMonthController', [\"config\", \"repository\", \"commitsByMonth\", function(config, repository, commitsByMonth){\n    var vm = this;\n\n    function parseDate(input) {\n      var parts = input.split('-');\n      return Date.UTC(parseInt(parts[0]), parseInt(parts[1]) - 1, 1);\n    }\n\n    if (repository && commitsByMonth) {\n      var seriesData = [];\n      angular.forEach(commitsByMonth.month, function(entry){\n        if (entry.value !== '1970-01' ){\n          seriesData.push([parseDate(entry.value), entry.count]);\n        }\n      });\n\n      vm.chartConfig = {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: repository.name + ' commit history'\n        },\n        xAxis: {\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            month: '%Y-%m'\n          },\n          title: {\n            text: 'Month'\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Commits'\n          },\n          min: 0\n        },\n        series: [{\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByAuthorController', [\"config\", \"repository\", \"commitsByAuthor\", function(config, repository, commitsByAuthor){\n    var vm = this;\n\n    if (repository && commitsByAuthor) {\n      var seriesData = [];\n      angular.forEach(commitsByAuthor.author, function(entry){\n        seriesData.push({\n          name: entry.value,\n          y: entry.count\n        });\n      });\n\n      if (seriesData.length > 0){\n        seriesData.sort(function(a, b){\n          return b.y - a.y;\n        });\n        seriesData[0].sliced = true;\n        seriesData[0].selected = true;\n      }\n\n      vm.chartConfig = {\n        chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false\n        },\n        title: {\n          text: repository.name\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n              enabled: true,\n              color: '#000000',\n              connectorColor: '#000000',\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n            }\n          }\n        },\n        series: [{\n          type: 'pie',\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  }]);\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .factory('SCM', [\"scmEndpoint\", \"$http\", function(scmEndpoint, $http){\n    \n    function data(response){\n      return response.data;\n    }\n\n    function request(url){\n      return $http.get(scmEndpoint + url).then(data);\n    }\n\n    function getRepositories(){\n      return request('repositories.json');\n    }\n\n    function getRepository(id){\n      return request('repositories/' + id + '.json');\n    }\n\n    function getCommitsByAuthor(id){\n      return request('plugins/statistic/' + id + '/commits-per-author.json');\n    }\n\n    function getCommitsByMonth(id){\n      return request('plugins/statistic/' + id + '/commits-per-month.json');\n    }\n\n    function getCommits(id, limit){\n      return request('repositories/' + id + '/changesets.json?limit=' + limit).then(function(data){\n        return data.changesets;\n      });\n    }\n\n    return {\n      getRepositories: getRepositories,\n      getRepository: getRepository,\n      getCommitsByAuthor: getCommitsByAuthor,\n      getCommitsByMonth: getCommitsByMonth,\n      getCommits: getCommits\n    };\n  }]);\n})(window);",null,"/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('ScmEditController', function(repositories){\n    var vm = this;\n\n    vm.repositories = repositories;\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('CommitsController', function(config, repository, commits){\n    var vm = this;\n\n    vm.repository = repository;\n    vm.commits = commits;\n\n    vm.gravatarHash = function(commit){\n      var hash;\n      if (commit.properties){\n        for (var i=0; i<commit.properties.length; i++){\n          if (commit.properties[0].key === 'gravatar-hash'){\n            hash = commit.properties[0].value;\n            break;\n          }\n        }\n      }\n      return hash;\n    };\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('LastCommitsController', function(config, repository, commits){\n    var vm = this;\n\n    if (repository && commits) {\n\n      var data = {};\n      angular.forEach(commits, function(commit){\n        var date = new Date(commit.date);\n        var key = date.getUTCFullYear() + '-' + (date.getUTCMonth() + 1) + '-' + date.getUTCDate();\n        var entry = data[key];\n        if (entry){\n          entry.count += 1;\n        } else {\n          data[key] = {\n            count: 1,\n            date: Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate())\n          };\n        }\n      });\n\n      var seriesData = [];\n      angular.forEach(data, function(entry){\n        seriesData.push([entry.date, entry.count]);\n      });\n\n      if (seriesData.length > 0){\n        seriesData.sort(function(a, b){\n          return a[0] - b[0];\n        });\n      }\n\n      vm.chartConfig = {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: repository.name + ' last commits'\n        },\n        xAxis: {\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            month: '%Y-%m'\n          },\n          title: {\n            text: 'Month'\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Commits'\n          },\n          min: 0\n        },\n        series: [{\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByMonthController', function(config, repository, commitsByMonth){\n    var vm = this;\n\n    function parseDate(input) {\n      var parts = input.split('-');\n      return Date.UTC(parseInt(parts[0]), parseInt(parts[1]) - 1, 1);\n    }\n\n    if (repository && commitsByMonth) {\n      var seriesData = [];\n      angular.forEach(commitsByMonth.month, function(entry){\n        if (entry.value !== '1970-01' ){\n          seriesData.push([parseDate(entry.value), entry.count]);\n        }\n      });\n\n      vm.chartConfig = {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: repository.name + ' commit history'\n        },\n        xAxis: {\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            month: '%Y-%m'\n          },\n          title: {\n            text: 'Month'\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Commits'\n          },\n          min: 0\n        },\n        series: [{\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByAuthorController', function(config, repository, commitsByAuthor){\n    var vm = this;\n\n    if (repository && commitsByAuthor) {\n      var seriesData = [];\n      angular.forEach(commitsByAuthor.author, function(entry){\n        seriesData.push({\n          name: entry.value,\n          y: entry.count\n        });\n      });\n\n      if (seriesData.length > 0){\n        seriesData.sort(function(a, b){\n          return b.y - a.y;\n        });\n        seriesData[0].sliced = true;\n        seriesData[0].selected = true;\n      }\n\n      vm.chartConfig = {\n        chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false\n        },\n        title: {\n          text: repository.name\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n              enabled: true,\n              color: '#000000',\n              connectorColor: '#000000',\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n            }\n          }\n        },\n        series: [{\n          type: 'pie',\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  });\n","/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nangular.module('adf.widget.scm')\n  .factory('SCM', function(scmEndpoint, $http){\n    \n    function data(response){\n      return response.data;\n    }\n\n    function request(url){\n      return $http.get(scmEndpoint + url).then(data);\n    }\n\n    function getRepositories(){\n      return request('repositories.json');\n    }\n\n    function getRepository(id){\n      return request('repositories/' + id + '.json');\n    }\n\n    function getCommitsByAuthor(id){\n      return request('plugins/statistic/' + id + '/commits-per-author.json');\n    }\n\n    function getCommitsByMonth(id){\n      return request('plugins/statistic/' + id + '/commits-per-month.json');\n    }\n\n    function getCommits(id, limit){\n      return request('repositories/' + id + '/changesets.json?limit=' + limit).then(function(data){\n        return data.changesets;\n      });\n    }\n\n    return {\n      getRepositories: getRepositories,\n      getRepository: getRepository,\n      getCommitsByAuthor: getCommitsByAuthor,\n      getCommitsByMonth: getCommitsByMonth,\n      getCommits: getCommits\n    };\n  });\n","(function(window, undefined) {'use strict';\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm', ['adf.provider', 'highcharts-ng'])\n  .config(function(dashboardProvider){\n\n    // category for widget add dialog\n    var category = 'SCM-Manager';\n\n    var edit = {\n      templateUrl: '{widgetsPath}/scm/src/edit/edit.html',\n      controller: 'ScmEditController',\n      controllerAs: 'vm',\n      resolve: {\n        /** @ngInject **/\n        repositories: function(SCM){\n          return SCM.getRepositories();\n        }\n      }\n    };\n\n    var resolveRepository = function(SCM, config){\n      var result = null;\n      if (config.repository){\n        result = SCM.getRepository(config.repository);\n      }\n      return result;\n    };\n\n    dashboardProvider\n      .widget('scm-commits-by-author', {\n        title: 'SCM Commits By Author',\n        description: 'SCM-Manager pie chart for commit count by author',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'CommitsByAuthorController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByAuthor: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommitsByAuthor(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-by-month', {\n        title: 'SCM Commits By Month',\n        description: 'SCM-Manager line chart for commit count by month',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'CommitsByMonthController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commitsByMonth: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommitsByMonth(config.repository);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits-last-commits', {\n        title: 'SCM Commits line chart',\n        description: 'SCM-Manager line char for the last 50 commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/charts/chart.html',\n        controller: 'LastCommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommits(config.repository, 50);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      })\n      .widget('scm-commits', {\n        title: 'SCM Commits',\n        description: 'SCM-Manager commits',\n        category: category,\n        templateUrl: '{widgetsPath}/scm/src/commits/view.html',\n        controller: 'CommitsController',\n        controllerAs: 'vm',\n        reload: true,\n        resolve: {\n          repository: resolveRepository,\n          commits: function(SCM, config){\n            var result = null;\n            if (config.repository){\n              result = SCM.getCommits(config.repository, 10);\n            }\n            return result;\n          }\n        },\n        edit: edit\n      });\n  });\n\nangular.module(\"adf.widget.scm\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"{widgetsPath}/scm/src/charts/chart.html\",\"<div><div ng-if=!config.repository class=\\\"alert alert-info\\\">Please configure a repository</div><div ng-if=config.repository><highchart config=vm.chartConfig></highchart></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/commits/view.html\",\"<div><div ng-if=!config.repository class=\\\"alert alert-info\\\">Please configure a repository</div><div ng-if=config.repository><ul class=media-list><li class=media ng-repeat=\\\"commit in vm.commits\\\"><div ng-if=vm.gravatarHash(commit) class=media-left><img class=\\\"media-object img-thumbnail\\\" ng-src=\\\"http://www.gravatar.com/avatar/{{vm.gravatarHash(commit)}}?s=64&d=identicon\\\"></div><div class=media-body><p>{{commit.description}}</p><small>{{commit.author.name}}, {{commit.date | date: \\'yyyy-MM-dd HH:mm\\'}}</small></div></li></ul></div></div>\");\n$templateCache.put(\"{widgetsPath}/scm/src/edit/edit.html\",\"<form role=form><div class=form-group><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository><option ng-repeat=\\\"repository in vm.repositories | orderBy: \\'name\\'\\\" value={{repository.id}}>{{repository.name}}</option></select></div></form>\");}]);\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('ScmEditController', function(repositories){\n    var vm = this;\n\n    vm.repositories = repositories;\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsController', function(config, repository, commits){\n    var vm = this;\n\n    vm.repository = repository;\n    vm.commits = commits;\n\n    vm.gravatarHash = function(commit){\n      var hash;\n      if (commit.properties){\n        for (var i=0; i<commit.properties.length; i++){\n          if (commit.properties[0].key === 'gravatar-hash'){\n            hash = commit.properties[0].value;\n            break;\n          }\n        }\n      }\n      return hash;\n    };\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('LastCommitsController', function(config, repository, commits){\n    var vm = this;\n\n    if (repository && commits) {\n\n      var data = {};\n      angular.forEach(commits, function(commit){\n        var date = new Date(commit.date);\n        var key = date.getUTCFullYear() + '-' + (date.getUTCMonth() + 1) + '-' + date.getUTCDate();\n        var entry = data[key];\n        if (entry){\n          entry.count += 1;\n        } else {\n          data[key] = {\n            count: 1,\n            date: Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate())\n          };\n        }\n      });\n\n      var seriesData = [];\n      angular.forEach(data, function(entry){\n        seriesData.push([entry.date, entry.count]);\n      });\n\n      if (seriesData.length > 0){\n        seriesData.sort(function(a, b){\n          return a[0] - b[0];\n        });\n      }\n\n      vm.chartConfig = {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: repository.name + ' last commits'\n        },\n        xAxis: {\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            month: '%Y-%m'\n          },\n          title: {\n            text: 'Month'\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Commits'\n          },\n          min: 0\n        },\n        series: [{\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByMonthController', function(config, repository, commitsByMonth){\n    var vm = this;\n\n    function parseDate(input) {\n      var parts = input.split('-');\n      return Date.UTC(parseInt(parts[0]), parseInt(parts[1]) - 1, 1);\n    }\n\n    if (repository && commitsByMonth) {\n      var seriesData = [];\n      angular.forEach(commitsByMonth.month, function(entry){\n        if (entry.value !== '1970-01' ){\n          seriesData.push([parseDate(entry.value), entry.count]);\n        }\n      });\n\n      vm.chartConfig = {\n        chart: {\n          type: 'spline'\n        },\n        title: {\n          text: repository.name + ' commit history'\n        },\n        xAxis: {\n          type: 'datetime',\n          dateTimeLabelFormats: {\n            month: '%Y-%m'\n          },\n          title: {\n            text: 'Month'\n          }\n        },\n        yAxis: {\n          title: {\n            text: 'Commits'\n          },\n          min: 0\n        },\n        series: [{\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .controller('CommitsByAuthorController', function(config, repository, commitsByAuthor){\n    var vm = this;\n\n    if (repository && commitsByAuthor) {\n      var seriesData = [];\n      angular.forEach(commitsByAuthor.author, function(entry){\n        seriesData.push({\n          name: entry.value,\n          y: entry.count\n        });\n      });\n\n      if (seriesData.length > 0){\n        seriesData.sort(function(a, b){\n          return b.y - a.y;\n        });\n        seriesData[0].sliced = true;\n        seriesData[0].selected = true;\n      }\n\n      vm.chartConfig = {\n        chart: {\n          plotBackgroundColor: null,\n          plotBorderWidth: null,\n          plotShadow: false\n        },\n        title: {\n          text: repository.name\n        },\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            dataLabels: {\n              enabled: true,\n              color: '#000000',\n              connectorColor: '#000000',\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %'\n            }\n          }\n        },\n        series: [{\n          type: 'pie',\n          name: repository.name,\n          data: seriesData\n        }]\n      };\n    }\n  });\n\n/*\n * The MIT License\n *\n * Copyright (c) 2016, Sebastian Sdorra\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n\n\nangular.module('adf.widget.scm')\n  .factory('SCM', function(scmEndpoint, $http){\n    \n    function data(response){\n      return response.data;\n    }\n\n    function request(url){\n      return $http.get(scmEndpoint + url).then(data);\n    }\n\n    function getRepositories(){\n      return request('repositories.json');\n    }\n\n    function getRepository(id){\n      return request('repositories/' + id + '.json');\n    }\n\n    function getCommitsByAuthor(id){\n      return request('plugins/statistic/' + id + '/commits-per-author.json');\n    }\n\n    function getCommitsByMonth(id){\n      return request('plugins/statistic/' + id + '/commits-per-month.json');\n    }\n\n    function getCommits(id, limit){\n      return request('repositories/' + id + '/changesets.json?limit=' + limit).then(function(data){\n        return data.changesets;\n      });\n    }\n\n    return {\n      getRepositories: getRepositories,\n      getRepository: getRepository,\n      getCommitsByAuthor: getCommitsByAuthor,\n      getCommitsByMonth: getCommitsByMonth,\n      getCommits: getCommits\n    };\n  });\n})(window);"],"sourceRoot":"/source/"}