(function(window, undefined) {'use strict';
angular.module("adf.widget.scm").run(["$templateCache", function($templateCache) {$templateCache.put("{widgetsPath}/scm/src/scm.js","/* * The MIT License * * Copyright (c) 2016, Sebastian Sdorra * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */ \'use strict\'; angular.module(\'adf.widget.scm\', [\'adf.provider\', \'chart.js\']) .config(function(dashboardProvider){ // category for widget add dialog var category = \'SCM-Manager\'; var edit = { templateUrl: \'{widgetsPath}/scm/src/edit/edit.html\', controller: \'ScmEditController\', controllerAs: \'vm\', resolve: { /** @ngInject **/ repositories: function(SCM){ return SCM.getRepositories(); } } }; var resolveRepository = function(SCM, config){ var result = null; if (config.repository){ result = SCM.getRepository(config.repository); } return result; }; dashboardProvider .widget(\'scm-commits-by-author\', { title: \'SCM Commits By Author\', description: \'SCM-Manager pie chart for commit count by author\', category: category, templateUrl: \'{widgetsPath}/scm/src/charts/pie-chart.html\', controller: \'CommitsByAuthorController\', controllerAs: \'vm\', reload: true, resolve: { repository: resolveRepository, commitsByAuthor: function(SCM, config){ var result = null; if (config.repository){ result = SCM.getCommitsByAuthor(config.repository); } return result; } }, edit: edit }) .widget(\'scm-commits-by-month\', { title: \'SCM Commits By Month\', description: \'SCM-Manager line chart for commit count by month\', category: category, templateUrl: \'{widgetsPath}/scm/src/charts/line-chart.html\', controller: \'CommitsByMonthController\', controllerAs: \'vm\', reload: true, resolve: { repository: resolveRepository, commitsByMonth: function(SCM, config){ var result = null; if (config.repository){ result = SCM.getCommitsByMonth(config.repository); } return result; } }, edit: edit }) .widget(\'scm-commits-last-commits\', { title: \'SCM Commits line chart\', description: \'SCM-Manager line char for the last 50 commits\', category: category, templateUrl: \'{widgetsPath}/scm/src/charts/line-chart.html\', controller: \'LastCommitsController\', controllerAs: \'vm\', reload: true, resolve: { repository: resolveRepository, commits: function(SCM, config){ var result = null; if (config.repository){ result = SCM.getCommits(config.repository, 50); } return result; } }, edit: edit }) .widget(\'scm-commits\', { title: \'SCM Commits\', description: \'SCM-Manager commits\', category: category, templateUrl: \'{widgetsPath}/scm/src/commits/view.html\', controller: \'CommitsController\', controllerAs: \'vm\', reload: true, resolve: { repository: resolveRepository, commits: function(SCM, config){ var result = null; if (config.repository){ result = SCM.getCommits(config.repository, 10); } return result; } }, edit: edit }); });");
$templateCache.put("{widgetsPath}/scm/src/service.js","/* * The MIT License * * Copyright (c) 2016, Sebastian Sdorra * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */ \'use strict\'; angular.module(\'adf.widget.scm\') .factory(\'SCM\', function(scmEndpoint, $http){ function data(response){ return response.data; } function request(url){ return $http.get(scmEndpoint + url).then(data); } function getRepositories(){ return request(\'repositories.json\'); } function getRepository(id){ return request(\'repositories/\' + id + \'.json\'); } function getCommitsByAuthor(id){ return request(\'plugins/statistic/\' + id + \'/commits-per-author.json\'); } function getCommitsByMonth(id){ return request(\'plugins/statistic/\' + id + \'/commits-per-month.json\'); } function getCommits(id, limit){ return request(\'repositories/\' + id + \'/changesets.json?limit=\' + limit).then(function(data){ return data.changesets; }); } return { getRepositories: getRepositories, getRepository: getRepository, getCommitsByAuthor: getCommitsByAuthor, getCommitsByMonth: getCommitsByMonth, getCommits: getCommits }; });");
$templateCache.put("{widgetsPath}/scm/src/charts/commitsByAuthor.js","/* * The MIT License * * Copyright (c) 2016, Sebastian Sdorra * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */ \'use strict\'; angular.module(\'adf.widget.scm\') .controller(\'CommitsByAuthorController\', function(config, repository, commitsByAuthor){ var vm = this; if (repository && commitsByAuthor) { vm.chart = createChart(); } function createChart() { var data = {}; angular.forEach(commitsByAuthor.author, function (entry) { var author = entry.value; data[author]= entry.count; }); var chart = { labels: [], data: [], series: [\"Commits\"], class: \"chart-pie\" }; angular.forEach(data, function (count, author) { chart.labels.push(author); chart.data.push(count); }); return chart; } });");
$templateCache.put("{widgetsPath}/scm/src/charts/commitsByMonth.js","/* * The MIT License * * Copyright (c) 2016, Sebastian Sdorra * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */ \'use strict\'; angular.module(\'adf.widget.scm\') .controller(\'CommitsByMonthController\', function(config, repository, commitsByMonth) { var vm = this; if (commitsByMonth) { vm.chart = createChart(); } function parseDate(input) { var parts = input.split(\'-\'); return Date.UTC(parseInt(parts[0]), parseInt(parts[1]) - 1, 1); } function createChart() { var chartData = []; var chart = { labels: [], data: [chartData], series: [\"Commits\"], class: \"chart-line\" }; angular.forEach(commitsByMonth.month, function(month) { chart.labels.push(month.value); chartData.push(month.count); }); return chart; } });");
$templateCache.put("{widgetsPath}/scm/src/charts/commitsLastCommits.js","/* * The MIT License * * Copyright (c) 2016, Sebastian Sdorra * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */ \'use strict\'; angular.module(\'adf.widget.scm\') .controller(\'LastCommitsController\', function($filter, config, repository, commits){ var vm = this; if (repository && commits) { vm.chart = createChart(); } function createChart() { var chartData = []; var chart = { labels: [], data: [chartData], series: [\"Commits\"], class: \"chart-line\" }; var data = {}; angular.forEach(commits, function(commit){ var date = new Date(commit.date); var key = date.getUTCFullYear() + \'-\' + (date.getUTCMonth() + 1) + \'-\' + date.getUTCDate(); var entry = data[key]; if (entry){ entry.count += 1; } else { data[key] = { date: key, count: 1 }; } }); angular.forEach(data, function(entry) { console.log(entry); chart.labels.push(entry.date); chartData.push(entry.count); }); chart.labels.reverse(); chartData.reverse(); return chart; } });");
$templateCache.put("{widgetsPath}/scm/src/edit/simpleEditController.js","/* * The MIT License * * Copyright (c) 2016, Sebastian Sdorra * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */ \'use strict\'; angular.module(\'adf.widget.scm\') .controller(\'ScmEditController\', function(repositories){ var vm = this; vm.repositories = repositories; });");
$templateCache.put("{widgetsPath}/scm/src/commits/commits.js","/* * The MIT License * * Copyright (c) 2016, Sebastian Sdorra * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the \"Software\"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE * SOFTWARE. */ \'use strict\'; angular.module(\'adf.widget.scm\') .controller(\'CommitsController\', function($sce, config, repository, commits){ var vm = this; vm.repository = repository; // allow html descriptions angular.forEach(commits, function(commit){ commit.description = $sce.trustAsHtml(commit.description); }); vm.commits = commits; vm.gravatarHash = function(commit){ var hash; if (commit.properties){ for (var i=0; i");
$templateCache.put("{widgetsPath}/scm/src/charts/line-chart.html","<div><div class=\"alert alert-info\" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=vm.chart><canvas id=line class=\"chart chart-line\" chart-data=vm.chart.data chart-labels=vm.chart.labels chart-options=vm.chart.options chart-series=vm.chart.series></canvas></div></div>");
$templateCache.put("{widgetsPath}/scm/src/charts/pie-chart.html","<div><div class=\"alert alert-info\" ng-if=!vm.chart>Please insert a repository path in the widget configuration</div><div ng-if=vm.chart><canvas id=pie class=\"chart chart-pie\" chart-legend=true chart-data=vm.chart.data chart-labels=vm.chart.labels></canvas></div></div>");
$templateCache.put("{widgetsPath}/scm/src/edit/edit.html","<form role=form><div class=form-group><label for=repository>Repository</label><select name=repository id=repository class=form-control ng-model=config.repository><option ng-repeat=\"repository in vm.repositories | orderBy: \'name\'\" value={{repository.id}}>{{repository.name}}</option></select></div></form>");
$templateCache.put("{widgetsPath}/scm/src/commits/view.html","<div><div ng-if=!config.repository class=\"alert alert-info\">Please configure a repository</div><div ng-if=config.repository><ul class=media-list><li class=media ng-repeat=\"commit in vm.commits\"><div ng-if=vm.gravatarHash(commit) class=media-left><img class=\"media-object img-thumbnail\" ng-src=\"http://www.gravatar.com/avatar/{{vm.gravatarHash(commit)}}?s=64&d=identicon\"></div><div class=media-body><p ng-bind-html=commit.description></p><small>{{commit.author.name}}, {{commit.date | date: \'yyyy-MM-dd HH:mm\'}}</small></div></li></ul></div></div>");}]);})(window);